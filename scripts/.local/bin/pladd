#!/bin/sh

# This script intakes an m3u playlist path and an arbitrary file path
# and then appends the file's path to the playlist file IF the path isn't already
# on the playlist (does not dereference symlinks).
#
# If the first parameter is not a file path, the script will search the default playlists directory
# for a file with the same name and a m3u extension.
#
# If the second argument is skipped, mpc is used to fetch the current playing song in mpd.
#
# This script assumes a music directory structure where a "~/Music/Download" directory is a symlink to ~/Downloads/Music
# this should only be relevant if you happen to have a "~/Music/Download" directory in your library.
#
# DEPENDENCIES
# - mpc
# - rsid3
# - libnotify


# m3u playlists should store one path per line, and each path should be RELATIVE to a music library's root directory.
# To ensure all paths are properly converted to relative variants, set the music root directory below.
mroot="$HOME/Music"

# default playlists directory
pldir="$HOME/Music/Playlists"

# Handle errors
[ $# -ne 1 ] && [ $# -ne 2 ] && echo "pladd: Exactly one or two arguments required (received $#)" >&2 && exit 1
[ ! -f "$1" ] && [ ! -f "$pldir/$1.m3u" ] && echo "pladd: playlist not found" >&2 && exit 1
[ $# -eq 2 ] && [ ! -f "$2" ] && echo "pladd: file \"$2\" not found" >&2 && exit 1

plist="$(if [ -f "$1" ]; then printf "%s" "$1"; else printf "%s" "$pldir/$1.m3u"; fi)"
plname="$(basename -- "$plist" | sed 's/\.m3u//')"
if [ $# -eq 2 ]; then
    file="$2"
    title="$(rsid3 --TIT2 -- "$file")"
else
    file="$(printf "%s" "$(mpc current -f %file%)")"
    printf "%s" "$file" | grep "^/" || file="$mroot/$file"
    title="$(mpc current -f %title%)"
fi

# Convert file to be a relative path to mroot
relfile="$(realpath --relative-to "$mroot" -- "$file" | sed 's/\.\.\/Downloads\/Music/Download/')"
grep -qFx -- "$relfile" "$plist" && notify-send -u low "pladd" "\"$title\" is already on the <b>$plname</b> playlist." && exit

# Add the path to the playlist
printf '%s\n' "$relfile" >>"$plist"
sed -i '/^$/d' "$plist"

# Verify the item was added correctly
if grep -qFx -- "$relfile" "$plist"; then
    notify-send -u low "pladd" "\"$title\" added to <b>$plname</b>"
else
    notify-send -u critical "pladd" "Failed to add \"$title\" to <b>$plname</b>"
fi
