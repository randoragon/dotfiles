# This file is the console-only equivalent of ".xprofile",
# meaning it is sourced every time a user LOGS INTO a shell
# environment (which happens before starting an X session).
#
# Running shell profile files usually is done by the LOGIN shell,
# and different login shells have different profile files
# (bash: .bash_profile, zsh: .zprofile, etc.)
# Since it's annoying to have to move those specific profile files
# around, instead I have a single, consistent ".profile" file,
# and whenever I switch login shells I just symlink their respective
# profile files to this one (e.g. 'ln -s ~/.profile ~/.zprofile').

# Locale settings
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Default applications
export EDITOR=nvim
export TERMINAL=foot
export BROWSER=firefox
export PAGER=less
export PDF_READER=zathura

# Default directories
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop:$HOME/.local/share/
export TRASH="${XDG_DATA_HOME:-$HOME/.local/share}/Trash/files"
export GOPATH="${XDG_DATA_HOME:-$HOME/.local/share}/go"
export WINEPREFIX="${XDG_DATA_HOME:-$HOME/.local/share}/wine"
export WGETRC="${XDG_CONFIG_HOME:-$HOME/.config}/wgetrc"
export PASSWORD_STORE_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/pass"
export PASSWORD_STORE_ENABLE_EXTENSIONS=true
export PASSWORD_STORE_GENERATED_LENGTH=32
export PASSWORD_STORE_CLIP_TIME=30
export NODE_REPL_HISTORY="${XDG_DATA_HOME:-$HOME/.local/share}/node_repl_history"
export ICEAUTHORITY="${XDG_CACHE_HOME:-$HOME/.cache}/ICEauthority"
export GTK_RC_FILES="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-1.0/gtkrc-1.0"
export GTK2_RC_FILES="${XDG_CONFIG_HOME:-$HOME/.config}/gtk-2.0/gtkrc-2.0"
export NOTMUCH_CONFIG="${XDG_CONFIG_HOME:-$HOME/.config}/notmuch/notmuchrc"
export NMBGIT="${XDG_CONFIG_HOME:-$HOME/.config}/notmuch/nmbug"
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"
export ZDOTDIR="${XDG_CONFIG_HOME:-$HOME/.config}/zsh"
export HISTFILE="${XDG_DATA_HOME:-$HOME/.local/share}/history"
export LESSKEYIN="${XDG_CONFIG_HOME:-$HOME/.config}/lesskey"
export LESSHISTFILE=-
export PYTHONSTARTUP="${XDG_CONFIG_HOME:-$HOME/.config}/python/pythonrc"
export SQLITE_HISTORY="${XDG_DATA_HOME:-$HOME/.local/share}/sqlite/history"
export CARGO_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/cargo"
export WEECHAT_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/weechat"
export R_ENVIRON_USER="${XDG_CONFIG_HOME:-$HOME/.config}/R/Renviron"
export GRIM_DEFAULT_DIR="$HOME/Pictures/Screenshots"

# Other configuration
export MPD_HOST="$HOME/.local/share/mpd/socket"
export MPD_PORT=6601
export i3_LAYOUTS="$HOME/.config/i3/layouts"
export LYNX_CFG="$HOME/.config/lynx/config"
export GNUPGHOME="$HOME/.local/share/gnupg"
export GPG_TTY="$(tty)"
export NNN_OPENER=xdg-open
export NNN_BMS='h:~;d:~/Documents'
export NNN_COLORS='6532'
export NNN_TRASH=1
export NVIM_TUI_ENABLE_TRUE_COLOR=1
export NVIM_SMOOTHIE_ENABLED=1
export VIM_PREVIEW_HOME="${TMPDIR:-/tmp}/vim-preview.$(whoami)"
export LUA_INIT="@$HOME/.config/lua/init.lua"
export ASCIIDOCTOR_OPTS='-r asciidoctor-diagram -a nofooter -a last-update-label! -a webfonts!'
export BEMENU_OPTS='--scrollbar=autohide --counter=always --tb #3fbfff --tf #000000 --hb #3fbfff --hf #000000 --scf #ffffff --sb #186888 --sf #ffffff  --bdr #223333'

export LM_LICENSE_FILE="$HOME/Software/Questa/LR-163448_License.dat"  # QuestaSim license -- for uni

# Add custom PATH entries
# user-specific paths take precedence over defaults, that's why
# the function prepends PATH with arguments instead of appending.
addpath () {
    if ! printf "%s" "$PATH" | grep -Pq "\(^\|:\)$1\(\$\|:\)"; then
        PATH="$1:$PATH"
    fi
}
addpath "$HOME/.local/bin"
addpath "$CARGO_HOME/bin"
unset addpath
export PATH

# This makes markdown previews with tables bearable
# to look at, just prepend the html file with it
export HTML_MD_STYLE="<style>
table, th, td {
    padding: 5px;
    border: 1px solid black;
    border-collapse: collapse;
}
</style>
"

# Start ssh-agent if not already running
ps -e | grep "$SSH_AGENT_PID"  | grep "ssh-agent$" || eval "$(ssh-agent -s)"

# lf icons
export LF_ICONS="di=📁:\
fi=📃:\
tw=🤝:\
ow=📂:\
ln=📎:\
or=❌:\
ex=🎯:\
*.txt=✍:\
*.png=🖼:\
*.ico=🖼:\
*.jpg=📸:\
*.jpeg=📸:\
*.gif=🖼:\
*.svg=🗺:\
*.xcf=🖌:\
*.html=🌎:\
*.xml=📰:\
*.gpg=🔑:\
*.css=🎨:\
*.pdf=📚:\
*.djvu=📚:\
*.epub=📚:\
*.csv=📓:\
*.xlsx=📓:\
*.tex=📜:\
*.md=📘:\
*.mp3=🎵:\
*.opus=🎵:\
*.ogg=🎵:\
*.m4a=🎵:\
*.flac=🎼:\
*.mkv=🎥:\
*.mp4=🎥:\
*.webm=🎥:\
*.mpeg=🎥:\
*.mpg=🎥:\
*.avi=🎥:\
*.mov=🎥:\
*.wmv=🎥:\
*.asf=🎥:\
*.flv=🎥:\
*.m4v=🎥:\
*.qt=🎥:\
*.zip=📦:\
*.rar=📦:\
*.7z=📦:\
*.tar.gz=📦:\
*.tar.bz=📦:\
*.tar.xz=📦:\
*.1=ℹ:\
*.nfo=ℹ:\
*.info=ℹ:\
*.log=📙:\
*.iso=📀:\
*.img=📀:\
*.part=💔:\
*.torrent=🔽:\
*.o=📑:\
*.srt=🗚:\
*.vtt=🗚:\
"

# Make sure VIM_PREVIEW_HOME exists
mkdir -p -- "$VIM_PREVIEW_HOME"
chmod 700 -- "$VIM_PREVIEW_HOME"

# Start graphical server on tty1 if not already running, otherwise start tmux
if [ "$(tty)" = "/dev/tty1" ]; then
    export XDG_CURRENT_DESKTOP=river  # https://github.com/emersion/xdg-desktop-portal-wlr/wiki/%22It-doesn't-work%22-Troubleshooting-Checklist
    river
elif command -v tmux; then
    tmux
fi
